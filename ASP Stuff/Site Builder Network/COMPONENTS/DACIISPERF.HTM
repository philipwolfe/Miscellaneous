
<HTML>
<HEAD>


<TITLE>Improving the Performance of Data Access Components with IIS 4.0</TITLE>

<META NAME="Description" CONTENT="Discussion of issues that can affect speed in an Internet Information Server (IIS) 4.0 environment when returning data to a Web client" />
<META NAME="Keywords" CONTENT="IIS 4.0, Data Access Components" />
<META NAME="Robots" CONTENT="All" />

<META NAME="Author" CONTENT="aLeland Ahlbeck" />
<META NAME="Posted" CONTENT="" />
<META NAME="Updated" CONTENT="07/16/1998" />

<META NAME="MS.LOCALE" CONTENT="EN-US" />
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1" />

<LINK REL="stylesheet" TYPE="text/css" HREF="../../../sitebuilder/shared/css/navbar.css" />
<LINK REL="stylesheet" TYPE="text/css" HREF="../../../sitebuilder/shared/css/ie4-wks.css" />


<SCRIPT LANGUAGE="JavaScript"><!--

// -----------------------------------------------------------
// Client-side BrowserData constructor
// Populated using data from server-side oBD object to avoid redundancy
// -----------------------------------------------------------

function BrowserData()
{
this.userAgent = "Mozilla/4.0 (compatible; MSIE 4.01; Windows NT)";
this.browser = "MSIE";
this.majorVer = "4";
this.minorVer = "01";
this.betaVer = 0;
this.platform = "NT";
this.getsNavBar = true;
this.doesActiveX = true;

}
var oBD = new BrowserData();

//--></SCRIPT>

<SCRIPT LANGUAGE="Javascript"><!--

// -----------------------------------------------------------
// window_load()
// Container function for load.
// -----------------------------------------------------------

function window_load()
{
if (oBD.getsNavBar)
{
if ("function" == typeof(InitNavLinks)) InitNavLinks();
if ("function" == typeof(CheckToTop)) CheckToTop();
}
}
window.onload = window_load;

//--></SCRIPT>

<SCRIPT LANGUAGE="Javascript">
<!--
var MarkMenu = "sbsi";
//-->
</SCRIPT>


</HEAD>

<BODY TOPMARGIN="0" LEFTMARGIN="0" MARGINHEIGHT="0" MARGINWIDTH="0" BGCOLOR="#FFFFFF">


<TABLE WIDTH="100%" CELLPADDING="0" CELLSPACING="0" BORDER="0">
<TR>
<TD ROWSPAN="2" WIDTH="460" VALIGN="top"><NOBR><A HREF="http://www.microsoft.com/" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/home.gif" WIDTH="103" HEIGHT="21" ALT="Microsoft Home" BORDER="0"></A><A HREF="http://www.microsoft.com/PRODUCTS/DEFAULT.asp?DIVISIONID="10"" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/prod.gif" WIDTH="81" HEIGHT="21" ALT="products" BORDER="0"></A><A HREF="http://www.microsoft.com/search/default.asp" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/search.gif" WIDTH="68" HEIGHT="21" ALT="search" BORDER="0"></A><A HREF="http://www.microsoft.com/ISAPI/GOSUPPORT.asp?TARGET=/SUPPORT/" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/support.gif" WIDTH="74" HEIGHT="21" ALT="support" BORDER="0"></A><A HREF="http://www.microsoft.com/referral/default.asp" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/shop.gif" WIDTH="55" HEIGHT="21" ALT="shop" BORDER="0"></A><A HREF="http://www.microsoft.com/ISAPI/GOREGWIZ.asp?TARGET=/REGWIZ/REGWIZ.asp" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/write.gif" WIDTH="78" HEIGHT="21" ALT="Write Us" BORDER="0"></A><IMG SRC="../../../library/images/gifs/toolbar/spacer.gif" WIDTH="1" HEIGHT="21" ALT="" BORDER="0"></NOBR></TD>
<TD BGCOLOR="#000000" WIDTH="100%" HEIGHT="20">&nbsp;</TD>
<TD ROWSPAN="2" WIDTH="91" ALIGN="right" VALIGN="top"><A HREF="http://www.microsoft.com/" TARGET="_top"><IMG SRC="../../../library/images/gifs/toolbar/msft.gif" WIDTH="91" HEIGHT="21" ALT="Microsoft Home" BORDER="0"></A></TD>
</TR>
<TR>
<TD COLSPAN="3" BGCOLOR="#FFFFFF" WIDTH="100%" HEIGHT="1"></TD>
</TR>
</TABLE>

<TABLE ID="tblNavBar" BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR VALIGN="top">
<TD CLASS="clsSBNLogo" TITLE="SBN Home" HEIGHT="34" WIDTH="90"><A HREF="/sitebuilder/default.htm" TARGET="_top" expNoTOC="true"><IMG HEIGHT="34" WIDTH="90" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/sbnbrand2.gif" ALT="SBN Home" /></A></TD>
<TD CLASS="clsNavBarItem" expItemNum="1">Magazine<BR><IMG HEIGHT="4" WIDTH="7" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/arrow.gif"></TD>
<TD>&nbsp;|&nbsp;</TD>
<TD CLASS="clsNavBarItem" expItemNum="2">Community<BR><IMG HEIGHT="4" WIDTH="7" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/arrow.gif"></TD>
<TD>&nbsp;|&nbsp;</TD>
<TD CLASS="clsNavBarItem" expItemNum="3">Workshop<BR><IMG HEIGHT="4" WIDTH="7" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/arrow.gif"></TD>
<TD>&nbsp;|&nbsp;</TD>
<TD CLASS="clsNavBarItem" expItemNum="4">Tools&nbsp;&amp;&nbsp;Samples<BR><IMG HEIGHT="4" WIDTH="7" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/arrow.gif"></TD>
<TD>&nbsp;|&nbsp;</TD>
<TD CLASS="clsNavBarItem" expItemNum="5">Training<BR><IMG HEIGHT="4" WIDTH="7" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/arrow.gif"></TD>
<TD>&nbsp;|&nbsp;</TD>
<TD CLASS="clsNavBarItem" expItemNum="6">Site&nbsp;Info<BR><IMG HEIGHT="4" WIDTH="7" BORDER="0" SRC="../../../sitebuilder/shared/navbar/graphics/arrow.gif"></TD>
<TD WIDTH="100%"></TD>
</TR>
</TABLE>


<TABLE ID="tblNavLinks" CLASS="clsNavLinks" CELLPADDING="0" CELLSPACING="0" BORDER="0" WIDTH="100%">
<TR>
<TD COLSPAN="2" HEIGHT="8"><IMG WIDTH="1" HEIGHT="8" SRC="../../../sitebuilder/shared/graphics/trans.gif"></TD>
<TD ROWSPAN="2"><A HREF="../../../workshop/default.htm" TARGET="_top"><IMG ALIGN="right" HEIGHT="30" WIDTH="106" BORDER="0" ALT="Click to return to the Workshop home page" SRC="../../../workshop/graphics/wrkbrand2.gif" /></A><BR /></TD>
</TR>
<TR>
<TD ROWSPAN="2">
<A HREF="../../../workshop/server/pg00164.htm"><IMG HEIGHT="32" WIDTH="31" HSPACE="25" BORDER="0" ALT="Click to return to the Server Technologies home page" SRC="../../../workshop/graphics/icons//server.gif" /></A>
</TD>
<TD>
<TABLE CELLPADDING="3" CELLSPACING="0" BORDER="0">
<TR>

<TD><A ID="lnkShowImg" HREF="../../../workshop/server/toc.htm" TARGET="_top"><IMG ID="imgShow" CLASS="clsLeftMenu" HEIGHT="15" WIDTH="18" BORDER="0" SRC="../../../workshop/graphics/icons/nl-show-0.gif" ALT="" /></A><BR></TD>
<TD NOWRAP><A ID="lnkShowText" CLASS="clsLeftMenu" HREF="../../../workshop/server/toc.htm" TARGET="_top">show toc</A> &nbsp;&nbsp; </TD>

<TD><A ID="lnkSyncImg" HREF="../../../workshop/pg01828.htm#/workshop/server/components/daciisperf.htm" TARGET="_top"><IMG ID="imgSync" CLASS="clsLeftMenu" HEIGHT="15" WIDTH="18" BORDER="0" SRC="../../../workshop/graphics/icons/nl-sync-0.gif" ALT="" /></A><BR></TD>
<TD NOWRAP><A ID="lnkSyncText" CLASS="clsLeftMenu" HREF="../../../workshop/pg01828.htm#/workshop/server/components/daciisperf.htm" TARGET="_top">sync toc</A> &nbsp;&nbsp; </TD>

<TD><A ID="lnkSearchImg" HREF="http://www.microsoft.com/isapi/gosearch.asp?TARGET=/dev/web/default.asp" TARGET="_top"><IMG ID="imgSearch" CLASS="clsLeftMenu" HEIGHT="15" WIDTH="18" BORDER="0" SRC="../../../workshop/graphics/icons/nl-search-0.gif" ALT="" /></A><BR></TD>
<TD NOWRAP><A ID="lnkSearchText" CLASS="clsLeftMenu" HREF="http://www.microsoft.com/isapi/gosearch.asp?TARGET=/dev/web/default.asp" TARGET="_top">search</A> &nbsp;&nbsp; </TD>

<TD><A ID="lnkIndexImg" HREF="../../../workshop/index/pg00001.htm"><IMG ID="imgIndex" CLASS="clsLeftMenu" HEIGHT="15" WIDTH="18" BORDER="0" SRC="../../../workshop/graphics/icons/nl-index-0.gif" ALT="" /></A><BR></TD>
<TD NOWRAP><A ID="lnkIndexText" CLASS="clsLeftMenu" HREF="../../../workshop/index/pg00001.htm">index</A> &nbsp;&nbsp; </TD>

</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD COLSPAN="2" WIDTH="100%">
<TABLE CELLPADDING="2" CELLSPACING="0" BORDER="0">
<TR>
<TD>&nbsp;</TD>
</TR>
</TABLE>
</TD>
</TR>
</TABLE>

<BR CLEAR="all" />
<DIV CLASS="clsBucketBranch"><A HREF="../../../workshop/pg00004.htm" TARGET="_top">Workshop</A>&nbsp;&nbsp;|&nbsp;&nbsp;<A HREF="../../../workshop/pg01827.htm#/workshop/server/pg00164.htm" TARGET="_top">Server Technologies</A></DIV>

<DIV CLASS="clsDocBody">

<!-- DOCUMENT CONTENT START -->

<H1><A NAME="TITLE" IDX_CONCEPT="stopindex;Improving the performance of Data Access Components with IIS 4.0">Improving the Performance of Data Access Components with IIS 4.0</A></H1>
<HR SIZE="1" />

   <H6><A NAME="top2" IDX_TYPE="sbngen" IDX_CONCEPT="Components, Data Access: performance of;IIS 4.0: improving performance of Data Access Components"></A></H6>

<!-- Insert Author and Date here -->
<P>Leland Ahlbeck
<BR>Software Design Engineer/Test
<BR>Microsoft Corporation
<P>March 12, 1998
<P>
<!-- Insert Article here -->
<P><a href="daciis.zip"><IMG SRC="../../../sitebuilder/graphics/icodownl.gif" WIDTH=16 HEIGHT=20 BORDER=0 ALT="Download"> Download this document in Microsoft Word (.DOC) format (zipped, 17.5K)</a>.
<P> <b>Contents</b>
<br><A HREF="daciisperf.htm#topic1">Introduction</A>
<BR> <A HREF="daciisperf.htm#topic2">Threading Support</A>
<BR><A HREF="daciisperf.htm#topic3">Connection Pooling </A>
<BR> <A HREF="daciisperf.htm#topic4">Connection Pooling and Dead ODBC Connections</A>
<BR><A HREF="daciisperf.htm#topic5">Cursor Considerations </A>
<BR><A HREF="daciisperf.htm#topic6">Network Issues</A>
<P>
<h2><A NAME="topic1"></A>Introduction
</h2>
<P>This paper addresses issues that can affect speed in an Internet Information Server (IIS) 4.0 environment when returning data to a Web client.  It assumes that you are familiar with administering your server. The discussion focuses on Microsoft products, but some of the issues raised may pertain to other OLE-DB data providers or open database connectivity (ODBC) drivers.  This paper emphasizes Microsoft SQL Server, because we (the Database API Performance group) have done most of our performance testing with it.
<P>
<h3>Terminology
</h3>
<P><b>Data provider</b> -- A data provider is a source for OLE-DB data.  For example, the Sample data provider that ships with the OLE-DB software development kit and the SQL Server data provider (which is not yet released), are both OLE-DB data providers.  Another example of a data provider is the Microsoft OLE-DB data provider for ODBC data sources.
<P><b>Consumer</b> -- A consumer is a user of a data provider.  For example, ActiveX&#153; Data Objects (ADO) is a consumer of OLE-DB data sources.
<P><b>OLE-DB data provider for ODBC data sources</b> -- This data provider is effectively a translation layer between OLE-DB and ODBC.  It allows OLE-DB consumers, such as ADO, to communicate with ODBC data sources.
<P><b>Middle tier</b> -- The middle tier is the group of components that run on the Web server.  Usually this includes your server software and any components that are used to service Web pages.
<P>
<h3>How Data Flows from the Database to the Middle Tier
</h3>
<P>Typically, when a request for data on a Web page is serviced by the Web server, many data components are involved.  Keep in mind that all processing is being done on the middle tier, where the end user's computer simply makes the request and receives the results. Processing the request for data consists of these steps:
<OL>

<LI>   The Active Server Pages (ASP) or Internet Server Application Programming Interface (ISAPI) DLL makes the call to the OLE-DB data provider.
<LI>   The OLE-DB data provider services the request and performs the query on the database; or, in the case of the OLE-DB data provider for ODBC data sources, a call is made to ODBC.
<LI>   The server then processes the request for data and returns the data to the data provider.
<LI>   The data provider returns the data to the requesting software.  This could be either an ASP or an ISAPI DLL.
<LI>   The data is then formulated in Web-page format and presented to the user.

</OL>
<P> <A HREF="daciisperf.htm#top" CLASS="clsBackTop"><IMG SRC="../../../workshop/graphics/top.gif"  WIDTH="18" HEIGHT="8" BORDER="0" ALT="Top">Back to top</A>

<h2><A NAME="topic2"></A>Threading Support
</h2>
<P><i>Threading</i> is the technology that enables the middle tier running on the Web server to communicate to other components in one or multiple threads.  The threading model chosen can greatly affect performance.  For example, if you have the option of communicating through one thread or multiple threads to the server hosting our data, you can provide support for multiple customers simultaneously by using multiple threads.
<P>
<h3>Threading Models Defined
</h3>
<P>There are multiple threading models supported; the three we will discuss are:
<UL>


<LI> Apartment threading
<LI> Free threading
<LI> Objects marked as both

</UL>The default threading model set up by the installation process is the apartment model; this is to accommodate the Microsoft Access database engine by default, because that database engine is limited to apartment threading.
<UL>


<LI> In the case of the apartment threading, only one thread from each object communicates with the back-end server, but the Web server can support multiple objects being entered simultaneously by different threads.  This is set as the default value for the threading model, because of compatibility with other Microsoft products.  This is the only threading model supported by the Microsoft Access database engine.
<LI> For free-threaded objects, there are no restrictions on the number of threads that can access an object. Therefore, multiple threads can access the same object that makes calls to the database, as opposed to having multiple copies of the object making calls to the database.
<LI> Objects marked as both can be accessed as either apartment- or free-threaded.  This will offer the most flexibility for your Web server but may not be supported by all back ends.

</UL>Different components of the system can have different threading models.  In the case of IIS 4.0, the component that we are concerned with to improve database performance is the threading model applied to and supported by the data access components.  This could be either an ISAPI DLL or the ADO data access component.  In either case, you should use the most efficient threading model supported by the OLE-DB data provider you are using, with the exception of an ADO application running with SQL Server.  If you are getting your data from either the OLE-DB data provider for Microsoft Access databases or the Microsoft Access ODBC database driver via the OLE-DB data provider for ODBC data sources, you should use the apartment-threading model.
<h3>Free-Threading and ADO Objects
</h3>
<P>By default, all ADO objects are marked in the registry as apartment-threading model. If caching of ADO objects off the Application or Session object is required, you must mark the affected object as free-threaded.  To mark the ADO objects as free-threaded in the registry, you'll need to regedit the adofre15.reg file. Here's how to do this:
<OL>

<LI>   Locate the ADOFre15.reg file.  If you accepted the defaults for program file location when installing IIS, the ADOFre15.reg file will be in c: \Program files\Common files\System\ADO.
<LI>   Make the directory containing the file your current directory and issue the <b>RegEdit ADOFre15.reg</b><i> </i>command<i>.</i>
<LI>   You will need to restart your server before the change will take effect.

</OL>If you determine you need to switch the ADO threading model back to apartment threading, follow the above instructions, but RegEdit the ADOApt15.reg file.
<P>Note that sharing an ADO Connection object across multiple threads will not necessarily increase performance, and could potentially be slower. If the provider supports connection pooling (as does the SQL Server ODBC 3.5 driver), this is a more efficient mechanism.  Also, when leaving a cached connection open between operations, it could possibly be dropped or the link to the server could be broken.
<P>
<P> <A HREF="daciisperf.htm#top" CLASS="clsBackTop"><IMG SRC="../../../workshop/graphics/top.gif"  WIDTH="18" HEIGHT="8" BORDER="0" ALT="Top">Back to top</A>

<h2><A NAME="topic3"></A>Connection Pooling
</h2>
<P>When enabled, connection pooling sets up a pool of connections to service database connection requests.  Connection pooling allows a middle tier, like IIS, to hold onto the open connections and hand them out to the Web clients making requests from the database.  By not closing a connection to the database and holding it for future use, the time required to validate and provide the next connection to the back-end server is reduced.  By default, connection pooling is set to <b>on</b> in IIS 4.0 and to <b>off</b> in IIS 3.0; to improve performance we recommend that you enabled connection pooling for IIS 3.0.
<P>When connection pooling is enabled, a request for a connection comes to the driver manager and the connection request is handled through one of three avenues:
<UL>


<LI> If there are no connections in the pool, a new connection is created and passed to the user.
<LI> If there are available connections in the pool and the connection properties (User Id, Password, and so forth) requested by the client match the connection properties of the pooled connection, the client will be given the open connection in the pool.
<LI> If there are connections available but the connection properties do not match, a new connection will be created for the client with the appropriate properties.

</UL>When using connection pooling with SQL Server or any database system that limits user logons to a specified number, keep in mind that each user connection uses up one of the licensed logons.  Depending on your situation, this could be beneficial.  The driver manager will hold onto the connection, possibly preventing another user from logging onto the server.  On the other hand, with connection pooling enabled, you may have <i>n</i> user connections in the pool servicing <i>n plus users</i>.
<P>
<h3>Enabling Connection Pooling
</h3>
<P><h4>IIS version 3.0  </h4>
<OL>

<LI>   Click Start and then click Run. On the command line, type <b>RegEdit</b> and click OK.
<LI>   In the left pane of the Registry Editor, open the following tree (the backslashes indicate subsequent subdirectories):
<BR>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\ W3SVC\ASP\Parameters.
<LI>   Double-click StartConnectionPool in the right pane. This opens an Edit String dialog. Change the <b>0</b> (the value for Off) to <b>1</b> (the value for On).
<LI>   Click OK to save changes.

</OL><h4>IIS version 4.0</h4>
<P>ODBC 3.5 enables connection pooling at two levels: the database driver and the driver manager. This means that IIS 4.0 automatically supports connection pooling at the driver manager level and enables connection pooling for Microsoft SQL Server. Additionally, if you want your ODBC driver to participate in connection pooling, set the driver's <i>CPTimeout</i> value in the Windows NT&#174; registry. For more information about setting this value, see the ODBC documentation and on the Microsoft ODBC Web site at  <A HREF="http://www.microsoft.com/odbc/" TARGET="_top">http://www.microsoft.com/odbc/</A> <IMG SRC="../../../sitebuilder/graphics/leave-site.gif" WIDTH="17" HEIGHT="11" BORDER="0" ALT="Non-SBN link">.  The benefit of this structure for IIS 4.0 is the ability to have connection pooling enabled for some ODBC drivers and disabled for others.
<P><h4>Enabling connection pooling from your application</h4>
<P>You can enable connection pooling from your application by making a call to the ODBC API.  To enable connection pooling, make a call to <b>SQLSetEnvAttr</b>, passing a value for the type of connection pool you wish to enable.  For more information on the parameters that can be passed to enable connection pooling, see the ODBC documentation and on the Microsoft ODBC Web site at  <A HREF="http://www.microsoft.com/odbc/" TARGET="_top">http://www.microsoft.com/odbc/</A> <IMG SRC="../../../sitebuilder/graphics/leave-site.gif" WIDTH="17" HEIGHT="11" BORDER="0" ALT="Non-SBN link">.

<P>
<h3>Connection Pooling and SQL Server Temporary Stored Procedure
</h3>
<P>Creating stored procedures to process prepared statements with connection pooling enabled can be a dangerous situation.  Before getting into the dangers of connection pooling and temporary stored procedures, we must first understand when temporary stored procedures are created -- and more importantly -- deleted.
<P>Creating temporary stored procedures for prepared SQL statements is an option that is configurable from the ODBC Data Source Administrator.  The default for this setting is <b>On</b> for the SQL Server 2.65 and 3.5 drivers.  This means that when a SQL statement is prepared, a temporary stored procedure is created and compiled. When the prepared command is called by <b>ICommand.Execute</b> or through one of the ADO methods, the temporary stored procedure is executed, saving the overhead of parsing and compiling the SQL statement.  This feature can improve the performance of your application if it is used properly.  If your SQL statement is going to be executed more than two times or contains parameters and will be called multiple times, the statement should be prepared.  Keep in mind that there is a price to be  paid up front to prepare a SQL statement and that preparation is lost once you disconnect from the database.
<P>When connection pooling is enabled, the issue of when temporary stored procedures should be deleted is raised.  With the SQL Server 2.65 driver, they will be released when the connection is released. With the SQL Server 3.5 driver, you have an option of deleting them either when the connection is released, or as appropriate while connected.
<P>The danger with temporary stored procedures and connection pooling is this: If you are using the default setting, you run the risk of running out of room in TempDB where temporary stored procedures are created and stored.  When connection pooling is enabled, a connection is made to the database, but when the client is done with it and releases it, the connection goes back into the pool.  When the connection goes back into the pool, the connection is not released and the stored procedures are not deleted from the TempDB.  You effectively end up with temporary stored procedures in TempDB that are no longer associated with a client and will never be called again.
<P>Thus, when running the SQL Server 2.65 driver, it may be advisable to disable the creation of stored procedures on preparation when running with connection pooling.  With the SQL Server 3.5 driver, the option to create temporary stored procedures should be disabled or set to <b>disconnect and as appropriate</b> when running connection pooling.  Setting this option to <b>disconnect and as appropriate </b>means that the ODBC SQL Server driver will drop the connection when the OLE-DB ICommand object that created the temporary stored procedure is released. If your client code is ADO, the stored procedure would be released when the <b>ADODB.Recordset</b> and command object are closed.
<P>If you are using ODBC 3.0 and a Data Source Name (DSN)-less connection, or a file DSN to connect to your server you can set the additional connection properties supported by your driver.  For a listing of keywords supported by your driver, consult the driver-specific documentation.  The following ADO connection example details how to connect to a SQL Server database with out using a DSN.  In addition to specifying the server, user ID, and password, it also specifies the default database.
<P>
<PRE CLASS=clsCode>
Dim cn As ADODB.Connection
Set cn = New ADODB.Connection
cn.ConnectionString =&quot;DRIVER=SQL Server;
SERVER=DAPIPERF03;UID=sa;PWD=;DATABASE=ssNSTL&quot;
cn.Open
</PRE>
<P>
<h3>Monitoring Connection Pooling
</h3>
<P>With ODBC 3.5, you can monitor connection pooling using the Windows NT Performance Monitor (PerfMon.exe).  Using Performance Monitor, we can watch connection pooling working.  The driver manager will keep statistics on connection pooling, which can then be viewed through  Performance Monitor.  For Performance Monitor to track changes in connection pooling, some additions need to be made to the system registry on the IIS server.
<P><h4>Registry entries for monitoring connection pooling </h4>
<P>When you make changes to the registry, it is extremely important to back up the registry first.  To do this, use the backup facilities provided in the registry editor.
<P><a href="connpool.zip"><IMG SRC="../../../sitebuilder/graphics/icodownl.gif" WIDTH=16 HEIGHT=20 BORDER=0 ALT="Download"> Download the files to track connection pooling (zipped, 1K).
<P> </a>
<OL>

<LI>   Download the zipped files (above) and copy them to your Windows NT system directory.
<LI>   In the Windows NT system directory, run the following command: <b>RegEdit CPMon.reg</b><i>.  </i>This step adds the necessary keys to the registry to track the connection pooling performance counters.
<LI>   In the Windows NT system directory, run <b>lodctr odbcperf.ini</b>. This step loads the information about the performance counters that we can view with Performance Monitor.
<LI>   Restart you server.

</OL><h4>Connection pooling counters and what they mean </h4>
<P>After restarting your server, start Performance Monitor (PerfMon.exe).  Then go to the Add Counter dialog box, where you'll have an entry for ODBC Connection Pooling in the Process list box.  You will now have six new keys that can be monitored by Performance Monitor.  The distinction between hard and soft connections/disconnections is used in the naming convention of the keys.  Consider <i>hard actions</i> those actions taken by the connection pooling process.  <i>Soft actions</i> are actions taken by the application utilizing connection pooling.
<P>The counter that should show the most activity is the ODBC Soft Connection Counter.  This shows you the number of connections that are satisfied by the connection pool.  In this case, a live connection is coming from the pool rather than having to make a connection to the database.
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Counter </b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>Description</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>ODBC Hard Connection Counter per Second</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the number of actual connections per second that are made to the server.  When you first put your environment under heavy load, this counter will go up very quickly.  After a few seconds it will drop to zero. This is the normal behavior when connection pooling is working.  Once the connections to the server have been established, they will be used and placed in the pool for re-use. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>ODBC Hard Disconnect Counter per Second</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Displays the number of hard disconnects per second issued to the server.  These are actual connections to the server that are being released by connection pooling.
</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>ODBC Soft Connection Counter per Second</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This counter shows far more activity than the Hard Connections per Second counter.  It shows the number of connections made to the database from open connections that were in the pool.  Depending on the load on your server, it would not be uncommon for this to show 40 to 60 soft connections per second.  </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>ODBC Soft Disconnection Counter per Second</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Displays the number of disconnects per second issued by the applications.  When the application releases or disconnects, the connection is placed back in the pool. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>ODBC Current Active Connection Counter</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the number of connections in the pool that are currently in use.  With the version of ODBC that shipped with IIS 4.0, this counter is not working.  Consult  <A HREF="http://www.microsoft.com/ODBC/" TARGET="_top">http://www.microsoft.com/odbc/</A> <IMG SRC="../../../sitebuilder/graphics/leave-site.gif" WIDTH="17" HEIGHT="11" BORDER="0" ALT="Non-SBN link"> for updates to the ODBC driver manager.  </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>ODBC Current Free Connection Counter</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Displays the current number of free connections available in the pool.  These are live connections available for use.
</FONT>
</TD>
</TR>

</TABLE>
<P><h4>Other performance counters </h4>
<P>These performance counters that can also help you evaluate system performance. The following table details performance counters of interest, what object they are based on, and a description of why they are interesting.
<P>
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Object</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>Counter </b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>Description</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>SQL Server</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Max Users</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the maximum number of users that have concurrently connected to the SQL Server. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>SQL Server </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Current Users</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the number of current users connected to the SQL Server.  This number should be very close to the maximum number of Hard Connections per Second from the Connection Pooling object. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>SQL Server </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Cache I/O hits </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the percentage of data being read from the SQL Server Cache as opposed to being read from disk.  The higher the number the better; it is much faster to pull data from the cache. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Processor</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Processor utilization</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This performance key will show you the percentage of utilization on the server.  </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>IIS</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Currently executing requests per second </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the total number of executing requests per second. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>IIS</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Currently queued requests </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This is the number of requests that are waiting to be serviced by your server. </FONT>
</TD>
</TR>

</TABLE>
<P> <A HREF="daciisperf.htm#top" CLASS="clsBackTop"><IMG SRC="../../../workshop/graphics/top.gif"  WIDTH="18" HEIGHT="8" BORDER="0" ALT="Top">Back to top</A>

<h2><A NAME="topic4"></A>Connection Pooling and Dead ODBC Connections
</h2>
<P>When a connection becomes severed from the database, it potentially can prevent all applications that are requesting connections from the pool from making a connection to the database.  If a dead connection is  handed to an application as a working connection, the application would then fail and the dead connection would be placed back into the connection pool.  Once this dead connection was back in the pool, the driver manager would keep handing it to other applications requesting a connection.
<P>In an effort to fix this problem, ODBC released a fix to the driver manager that uses a SQL Server-specific driver attribute to detect a dead connection at disconnect time.  If the connection was determined to be dead, the connection would be destroyed rather than being placed back into the pool.  This fixed the problem of dead connections.
<P>This correction to ODBC revealed another problem with multithreading applications that use ODBC.  When the server crashes and no longer responds to the connection requests, all the connections are deleted out of the pool and the multithreading application will then attempt to make new connections to the server (which is dead and not responding).  The multithreaded application will try to make new connections to the server. While the first connection is waiting to time out, many other  connections are made by the application, and eventually the ODBC client is swamped by connection requests.  To fix this, the driver manager can attempt to detect dead server. To detect dead servers, the driver manager will retry the connection to a server only once.  If the retry is successful, the connection is handed to the application requesting the connection.  If the connection attempt fails, the connection is returned to the connection pool to block future connection attempts.
<P>
<h3>Dead Server Detection in Detail
</h3>
<P>There are two ways the driver manager can determine if the server is dead.  One technique involves checking the read-only connection attribute SQL_ATTR_CONNECTION_DEAD to determine if the server is working prior to returning the real connection to the connection pool.  The second involves checking a number of ODBC status codes that contain information about network failure. These are used to determine if the problem was related to network failure or other problems.
<P>The following events are used by the driver manager to determine if the server is not responding.  The process is based on a flag and a reconnect time.  The reconnect time is representative of the amount of time we will wait prior to attempting the reconnection to the server.
<OL>

<LI>   The first time a connection is determined to be dead, it is placed back in the pool, and marked as dead and that a retry has not been attempted.  The time that a reconnect should be attempted is noted on the connection before it is placed back into the pool.
<LI>   When the driver manger retrieves a connection from the pool that has been marked as dead and the reconnect time has not yet been reached, it is immediately returned to the pool and returns an error to the application.  This blocks other applications from trying to make the connection to the server. In this case, an error is returned to any requesting application.
<LI>   If the connection is marked as dead and the reconnect time has been reached, it is immediately returned to the pool to prevent other applications from trying to make a connection to the server.  The connection to the server is then retried.  If the connection is successful, the dead connection is removed from the pool and the pool functions as normal.  If the connection to the server fails, the retry time is reset on the dead connection in the pool.

</OL>
<h3>Controlling Dead Server Detection
</h3>
<P>A new registry setting has been added to control the retry time-out. This registry key will enable you to alter the default value of 60 seconds to whatever you like.  It is in the registry under HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ODBC Connection Pooling\Retry Wait.  The key is of data type <b>REG_SZ</b> and is the time-out in seconds.
<P>This setting can also be controlled from your application by making a call to the <b>ODBCSetTryWaitValue </b>ODBC function.  The function takes a DWORD as an argument and returns TRUE  if successful.
<P>Following is Visual Basic&#174; for Applications (VBA) code sample that demonstrates setting the <b>ODBCSetTryWaitValue</b>.  In this example the value is being set to <b>30</b> for a 30-second time-out on a dead connection:


<!-- <P><b>Example 1</b>-->

<P>
<PRE CLASS=clsCode>Declare Function ODBCSetTryWaitValue Lib &quot;ODBC32.dll&quot; (ByVal dwTimeOut As Integer) As Boolean
Sub SetServerWait()
    Dim fRetValue As Boolean
    fRetValue = ODBCSetTryWaitValue(30)
End Sub
</PRE>

<P>This was added to the Service Pack 1 release, which is available on the Microsoft ODBC Web site at  <A HREF="http://www.microsoft.com/odbc/" TARGET="_top">http://www.microsoft.com/odbc/</A> <IMG SRC="../../../sitebuilder/graphics/leave-site.gif" WIDTH="17" HEIGHT="11" BORDER="0" ALT="Non-SBN link">.
<P>
<P> <A HREF="daciisperf.htm#top" CLASS="clsBackTop"><IMG SRC="../../../workshop/graphics/top.gif"  WIDTH="18" HEIGHT="8" BORDER="0" ALT="Top">Back to top</A>

<h2><A NAME="topic5"></A>Cursor Considerations
</h2>
<P>When programming your application, consider the type of cursor you are requesting from the server.  In the case of Microsoft SQL Server, you can choose the type of cursor you open; each cursor carries specific functionality, benefits, and limitations.  If your application is returning data from the server in a forward-only manner, the most efficient cursor to use will be Default Result Set. The Default Result Set in SQL Server translates to a Forward-only/Read-only cursor, but is a special case -- all the results from the query are pushed from the server to the workstation without any further requests from the workstation.  There are some limitations associated with this cursor; see the SQL Server documentation for a more complete description of this cursor type.  Coding your application so it opens only a Dynamic, Keyset, or Static cursor when needed to update or delete records will improve the overall performance of the application.  Special consideration should be given to cases where you are planning to use a dynamic cursor; from a performance standpoint, this is by far the most expensive cursor you can request.  In many cases, a Keyset cursor could be implemented and would provide adequate functionality and optimum performance.
<P>
<h3>Cursor Summary
</h3>
<P>To get optimal performance from your application, you need to select the appropriate cursor for your needs.  Each cursor contains a specific set of functionality, so choosing your cursor carefully will ensure you are not paying a performance price for functionality you do not need.  The following table describes the different types of cursors available from SQL Server and other ODBC data source back-end servers.  For specific information on what cursors are supported by your back-end server, consult your server documentation.
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Cursor Type </b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>Description</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Default Result Set
<BR>(SQL Server-specific)</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This special Forward-only/Read-only cursor is available only with Microsoft SQL Server.  When the server is in this mode, it does not wait for the client to request the data to provide it.  Once the cursor has been opened, the server loads the wire with data; the only overhead is pulling the data off the wire. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Forward-only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Forward-only cursor movement can only be made one row at a time in a forward direction (from the top to the bottom of the result set).
</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Keyset </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Keyset cursor membership is fixed, but the data is up-to-date with the underlying database.  In other words, new rows added by users will not appear in the recordset but updates to the records will become visible.  All types of movement are supported.  For your cursor creation to be successful, you will need an index build on your table. </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Dynamic</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Data is up-to-date at all times.  All types of movement are supported.  Depending on the provider, bookmarks may be supported.  </FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Static </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>This cursor effectively provides a snapshot of the data, but depending on the provider may also enable the user to see and perform inserts and updates to the recordset.  Inserts and updates from other users will not be dynamically added to the result set.  All types of movement are supported, but providers may or may not support bookmarks. </FONT>
</TD>
</TR>

</TABLE>
<h3>Setting Cursors
</h3>
<P>The following table lists the settings required for different clients to achieve the specified server-side cursor type.  The following information was tested against SQL Server. If you are using another database server, you may need to verify what cursor types are supported by the server.
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Cursor Type</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>ADO</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>OLE-DB Provider for ODBC</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Default Result Set*</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No action required. </FONT>
</TD>
<P>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set properties:
<BR>None</FONT>
<P>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Forward-Only/Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set the cursor location property on the connection object to <b>adUseServer</b> and the cursor type to <b>adOpenForwardOnly</b> on the execute. </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set properties:
<BR>-DBPROP_OTHERINSERT  = VARIANT_FALSE
<BR>-DBPROP_OTHERUPDATEDELETE = VARIANT_FALSE
<BR>-DBPROP_OWNINSERT = VARIANT_FALSE
<BR>-DBPROP_OWNUPDATEDELETE = VARIANT_FALSE</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Dynamic</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set the cursor location property on the connection object to <b>adUseServer</b> and the cursor type to <b>adOpenDynamic</b> on the execute. </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set properties:
<BR>-DBPROP_OTHERINSERT  = VARIANT_TRUE
<BR>-DBPROP_OTHERUPDATEDELETE  = VARIANT_TRUE
<BR>-DBPROP_OWNINSERT = VARIANT_TRUE
<BR>-DBPROP_OWNUPDATEDELETE = VARIANT_TRUE</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Keyset</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set the cursor location property on the connection object to <b>adUseServer</b> and the cursor type to <b>adOpenKeyset</b> on the execute.
</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set properties:
<BR>-DBPROP_OTHERINSERT  = VARIANT_FALSE
<BR>-DBPROP_OTHERUPDATEDELETE = VARIANT_TRUE
<BR>-DBPROP_OWNINSERT = VARIANT_TRUE
<BR>-DBPROP_OWNUPDATEDELETE = VARIANT_TRUE</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Static </FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set the cursor location property on the connection object to <b>adUseServer</b> and the cursor type to <b>adOpenKeyset</b> on the execute.
</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Set properties:
<BR>-DBPROP_OTHERINSERT  = VARIANT_FALSE
<BR>-DBPROP_OTHERUPDATEDELETE = VARIANT_FALSE
<BR>-DBPROP_OWNINSERT = VARIANT_TRUE
<BR>-DBPROP_OWNUPDATEDELETE = VARIANT_TRUE</FONT>
</TD>
</TR>

</TABLE>*When setting the cursor to Default Result Set, you need to be aware that rowset size has an effect on the cursor you set.  To get the Default Result Set, you need to have the rowset size set to one prior to executing the SQL statement.  For efficiency when returning data, set the rowset size to a higher value after executing the SQL statement.  If you are making your call from ADO, you do not need to be concerned with this setting, because the OLE-DB provider for ODBC will take care of making the appropriate settings for you.
<P>The following code sample demonstrates how to open a Default Result Set cursor using ADO:
<P>
<PRE CLASS=clsCode>
Dim cn As ADODB.Connection
Dim rs As ADODB.Recordset
cn.Open
Set rs = New ADODB.Recordset
rs.Open &quot;SELECT * FROM Lots_O_Rows",cn
</PRE>
<P>The following code sample shows how to request a Dynamic cursor from SQL Server.  Note the setting for <b>rs.CacheSize</b>; this controls the ODBC rowset size.
<P>
<PRE CLASS=clsCode>Dim cn As ADODB.Connection
Dim rs As ADODB.Recordset
cn.Open
Set rs = New ADODB.Recordset
rs.CacheSize = 100
rs.Open &quot;SELECT * FROM Lots_O_Rows", cn, adOpenDynamic, adLockBatchOptimistic
</PRE>
<P>
<h3>Cursors and Supported Properties
</h3>
<P>The following table lists the properties the cursor will exhibit, providing the concurrency is set to <b>adLockBatchOptimistic</b> and the table the cursor is open against contains an index.  To test if a property is available for the cursor, select or call the <b>rs.Supports</b> function.  For more information on the <b>Supports</b> function or the properties listed below, see the ADO documentation.
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Supports Option </b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>adOpen<br>ForwardOnly</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>AdOpenDynamic</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>AdOpenKeyset</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>adOpenStatic</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adAddNew</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adApproxPosition</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adBookmark</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adDelete</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adHoldRecords</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adMovePrevious</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adResync</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>False</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adUpdate</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>adUpdateBatch</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>True</FONT>
</TD>
</TR>

</TABLE>
<P>On a table with an index, opened with <b>adLockBatchOptimistic</b>, the following <b>CursorTypes</b> are applicable as indicated per property:
<P>
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Method</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>adOpen<br>ForwardOnly</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>AdOpenDynamic</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>AdOpenKeyset</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>adOpenStatic</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>AbsolutePage</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Write-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Write-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>AbsolutePosition</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Write-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Write-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>ActiveConnection</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>BOF</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Bookmark</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>CacheSize</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>CursorType</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>EditMode</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>EOF</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Filter</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>LockType</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>MaxRecords</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>PageCount</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>PageSize</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>RecordCount</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Not Applicable</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Source</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read/Write</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Status</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Read-Only</FONT>
</TD>
</TR>

</TABLE>
<P>On a table with an index that is opened with concurrency option set to <b>adLockBatchOptimistic</b>, the following <b>CursorTypes</b> are applicable as indicated per method:
<P>
<TABLE WIDTH=95% BORDER=0 CELLPADDING=5 CELLSPACING=2>
<TR ALIGN=LEFT VALIGN=MIDDLE BGCOLOR="#A6CAF0">

<TD><FONT FACE="ARIAL" SIZE=2><b>Method</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>adOpen<br>ForwardOnly</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>AdOpenDynamic</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>AdOpenKeyset</b></FONT>
</TD>

<TD><FONT FACE="ARIAL" SIZE=2><b>adOpenStatic</b></FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>AddNew</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>CancelUpdate</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>CancelBatch</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Clone</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Close</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Delete</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>GetRows</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Move</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>MoveFirst</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>MoveLast</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>MovePrevious</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Open</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Requery</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Resync</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>No</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Supports</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>Update</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>
<TR ALIGN=LEFT VALIGN=TOP>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2><b>UpdateBatch</b></FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
<TD BGCOLOR=#EEEEEE ALIGN=LEFT><FONT FACE="ARIAL" SIZE=2>Yes</FONT>
</TD>
</TR>

</TABLE>
<P><h4>Additional notes</h4>
<OL>

<LI>   While you can request batch updating with a Forward-only and Dynamic cursor, you cannot update more than one row at a time. Users should use Keyset or Static cursors with batch updating.  If you are using SQL Server as your back-end server, the only cursor type that will do true batch updating is Keyset.
<LI>   <b>IRowsetScroll</b> is not implemented in the OLE-DB provider for ODBC drivers; thus the <b>AbsolutePosition</b> and <b>AbsolutePage</b> properties are write-only. Furthermore, these properties require bookmarks and are not supported by SQL Server when requesting a dynamic cursor.

</OL>
<h3>Query Based Update (QBU) Cursors
</h3>
<P>A QBU cursor is a hybrid cursor, that supports updates via query-based operations.  Consequently, you can request a Forward-only/Read-only QBU cursor from the OLE-DB data provider.  This cursor really gives you a Forward-only/Read-only cursor that supports updates to the result set, but you will not be able to see the updates unless you close and reopen your rowset.  OLE-DB is really taking your update to the rowset and formulating a SQL statement, creating a new command object, and executing the SQL statement against your database.  The problem with this technique is that when the OLE-DB code formulates the SQL statement, it may use all the column values it has to formulate the &quot;where&quot; clause of the statement, depending on your database design and the version of the ODBC driver you are running.
<P>If your application is doing just a few updates to the database, it may be advisable to use a  Forward-only/Read-only QBU cursor.  This would be more efficient than using a Dynamic cursor  that would support your updates to the database directly.  This cursor type's biggest limitation is that you will not be able to see your updates to the database until you close and reopen your recordset.  To determine if this is more efficient for your situation, it's advisable to run the application both ways with a timer.
<P>
<h3>Scrolling Backwards
</h3>
<P>This is an area where performance is greatly improved with ODBC 3.5 drivers and version 1.5 of the OLE-DB provider for ODBC data sources. Unfortunately, we have not seen big improvements across all cursor types.  Static cursors have shown the most improvement in the area of scrolling backward.  The implementation of bookmark technology underneath the <b>ODBC SQLScrollFetch interface</b> has made these performance improvements possible.  The OLE-DB provider for ODBC drivers makes calls to <b>SQLScrollFetch</b> using bookmarks to fetch backwards.  If you are connecting to SQL Server and need to scroll backwards, your best choice of cursors would be to use Keyset.
<P><P> <A HREF="daciisperf.htm#top" CLASS="clsBackTop"><IMG SRC="../../../workshop/graphics/top.gif"  WIDTH="18" HEIGHT="8" BORDER="0" ALT="Top">Back to top</A>

<h2><A NAME="topic6"></A>Network Issues
</h2>
<P>
<h3>SQL Server Network Libraries
</h3>
<P>When the SQL Server ODBC driver is installed on a machine, usually the only network library installed is Named Pipes; for performance reasons you should install additional libraries.  The most direct way to get the additional network libraries is to install the SQL Server client utilities on the machine.  This will install the additional network libraries.  After being installed, the libraries are available through the ODBC Data Source Administrator.  The network library that we have found to have the best performance is TCP/IP.
<P>
<h3>Configuring Network Libraries
</h3>
<P>Each DSN can be configured to work with a different network library.  When you set up the DSN, you can choose the network library that you want the DSN to use.  By default, the SQL Server DSN will be configured to use Named Pipes.  To specify a network library other than the default, see the SQL Server 2.65 driver network library that is listed on the DSN configuration screen.  Enter the DLL name of the network library you wish to use.  The process for the SQL Server 3.5 driver is simpler: On the second screen of the DSN Wizard, click  the Client Configuration button.  Choose the Network Library tab from the SQL Server Client Configuration Utility Screen. From this screen, you are presented with a list box of the network libraries that are currently installed on the machine.  Be sure you have set up your SQL Server to support the network library you choose.  Once you set a library for one connection, it will become the default for all subsequent connections, as well as any DSN-less connections that your application may use.
<P>Another point on network libraries: After configuring the client and server machines to use a network library other than Named Pipes, you should not remove the Named Pipe support on the server.  This protocol is used by the SQL Server Enterprise manager to communicate with the server.  Removing this protocol will prevent the SQL Server Enterprise manager from communicating with your server.
<P>
<h3>Networking Bandwidth and Protocols
</h3>
<P>Many larger corporate networks are running multiple protocols to accommodate different generations of network expansion.  Some consideration should be given to the interaction of these protocols.  For example, some servers running Internetwork Packet Exchange (IPX) will continually announce themselves with a broadcast message.  This broadcast message leads to additional network traffic that may adversely affect system performance.
<P>TCP/IP currently provides the best performance; however, multiple network protocols are necessary for some corporate environments, and eliminating other protocols and running just TCP/IP may not be practical. With this in mind, it may be possible to isolate the Web server and database server from the other protocols by not routing them to the portion of the site containing the IIS components. This effectively creates a somewhat isolated network environment for your Web-based applications.  Eliminating this additional network traffic may have a positive effect on overall performance.

<P>
<P><P>
<P>







<!-- DOCUMENT CONTENT END -->

</DIV>

<DIV CLASS="clsDocBody">
<HR SIZE="1" />
<P><I>Did you find this article useful? Gripes? Compliments? Suggestions for other articles? <A TITLE="Go ahead. Make our day! Send us your thoughts." HREF="../../../sitebuilder/pg01826.htm" TARGET="_top">Write us!</A></I></P>
<P ID="pBackTop"><A HREF="daciisperf.htm#top" CLASS="clsBackTop"><IMG SRC="../../../workshop/graphics/top.gif" WIDTH="18" HEIGHT="8" BORDER="0" ALT="Back to top">Back to top</A></P>

<P CLASS="clsIncCpyRt">

</P>

&copy; <A CLASS="clsIncCpyRt" HREF="http://www.microsoft.com/misc/cpyright.htm" TARGET="_top">1998 Microsoft Corporation. All rights reserved. Terms of use</A>.

<P>&nbsp;</P>
</DIV>
<SCRIPT LANGUAGE="JavaScript"><!--

function CheckToTop()
{
var eBody = document.body;
if (eBody.scrollHeight > eBody.offsetHeight) pBackTop.style.display = 'block';
}

//--></SCRIPT>

<DIV ID="divMenu1" CLASS="clsMenu" ONMOUSEOVER="Menu_hover();" ONMOUSEOUT="Menu_hover();" ONCLICK="Menu_click();">
<DIV expURL="../../../sitebuilder/magazine/default.htm">Magazine Home</DIV>
<DIV expURL="../../../sitebuilder/magazine/jane.htm">Ask Jane</DIV>
<DIV expURL="../../../sitebuilder/magazine/dude.htm">DHTML Dude</DIV>
<DIV expURL="../../../sitebuilder/magazine/xml.htm">Extreme XML</DIV>
<DIV expURL="../../../sitebuilder/magazine/starters.htm">For Starters</DIV>
<DIV expURL="../../../sitebuilder/magazine/hess.htm">More or Hess</DIV>
<DIV expURL="../../../sitebuilder/magazine/server.htm">Servin' It Up</DIV>
<DIV expURL="../../../sitebuilder/magazine/site.htm">Site Lights</DIV>
<DIV expURL="../../../sitebuilder/magazine/webmen.htm">Web Men Talking</DIV>
</DIV>
<DIV ID="divMenu2" CLASS="clsMenu" ONMOUSEOVER="Menu_hover();" ONMOUSEOUT="Menu_hover();" ONCLICK="Menu_click();">
<DIV expURL="http://www.microsoft.com/sbnmember/default.asp">Member Community Home</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/freebies/default.asp">Benefits: Freebies &amp; Discounts</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/promote/default.asp">Benefits: Promote Your Site</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/connect/default.asp">Benefits: Connect with Your Peers</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/glance-lev.asp">Benefits at a Glance</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/osig/default.asp">Online Special-Interest Groups</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/levels/member.asp">Your Membership</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/freebies/stores.asp">SBN Stores</DIV>
<DIV expURL="http://www.microsoft.com/sbnmember/apply/registration.asp">Join Now</DIV>
</DIV>
<DIV ID="divMenu3" CLASS="clsMenu" ONMOUSEOVER="Menu_hover();" ONMOUSEOUT="Menu_hover();" ONCLICK="Menu_click();">
<DIV expURL="../../../workshop/default.htm">Workshop Home</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/essentials/default.htm">Essentials</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/delivery/default.htm">Content &amp; Component Delivery</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/components/default.htm">Component Development</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/database/default.htm">Data Access &amp; Databases</DIV>
<DIV expURL="../../../workshop/design/default.htm">Design</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/author/default.htm">DHTML, HTML &amp; CSS</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/xml/default.htm">Extensible Markup Language (XML)</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/languages/default.htm">Languages &amp; Development Tools</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/messaging/default.htm">Messaging &amp; Collaboration</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/networking/default.htm">Networking, Protocols &amp; Data Formats</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/browser/default.htm">Reusing Browser Technology</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/security/default.htm">Security &amp; Cryptography</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/server/default.htm">Server Technologies</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/imedia/default.htm">Streaming &amp; Interactive Media</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/workshop/management/default.htm">Web Content Management</DIV>
<DIV expURL="../../../workshop/index/default.htm">Workshop Index</DIV>
</DIV>
<DIV ID="divMenu4" CLASS="clsMenu" ONMOUSEOVER="Menu_hover();" ONMOUSEOUT="Menu_hover();" ONCLICK="Menu_click();">
<DIV expURL="../../../gallery/default.htm">Tools &amp; Samples Home</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/gallery/tools/default.htm">Tools</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/gallery/samples/default.htm">Samples, Headers, Libs</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/gallery/images/default.htm">Images</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/gallery/sounds/default.htm">Sounds</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/gallery/stylesheets/default.htm">Style Sheets</DIV>
<DIV expURL="http://www.microsoft.com/typography/fontpack/win.htm">Web Fonts</DIV>
</DIV>
<DIV ID="divMenu5" CLASS="clsMenu" ONMOUSEOVER="Menu_hover();" ONMOUSEOUT="Menu_hover();" ONCLICK="Menu_click();">
<DIV expURL="../../../devtraining/default.htm">Training Home</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/seminars/default.htm">SBN Live Seminars</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/chat/default.htm">SBN Live Chats</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/atec.htm">Courses</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/peer/default.htm">Peer Support</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/mastering.htm">CD-ROM Training</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/books_kits.htm">Books & Training Kits</DIV>
<DIV expURL="../../../workshop/c-frame.htm#/devtraining/mscert/default.htm">Certification</DIV>
</DIV>
<DIV ID="divMenu6" CLASS="clsMenu" ONMOUSEOVER="Menu_hover();" ONMOUSEOUT="Menu_hover();" ONCLICK="Menu_click();">
<DIV expURL="../../../sitebuilder/default.htm">SBN Home</DIV>
<DIV expURL="../../../sitebuilder/siteinfo/newtosite.htm">New to SBN?</DIV>
<DIV expURL="../../../sitebuilder/whatsnew.htm">What's New on SBN</DIV>
<DIV expURL="../../../sitebuilder/siteinfo/sitemap.htm">Site Map</DIV>
<DIV expURL="http://www.microsoft.com/isapi/gosearch.asp?TARGET=/dev/web/default.asp">Site Search</DIV>
<DIV expURL="../../../sitebuilder/siteinfo/glossary/default.htm">Glossary</DIV>
<DIV expURL="../../../sitebuilder/write-us.htm">Write Us</DIV>
<DIV expURL="../../../sitebuilder/siteinfo/about.htm">About This Site</DIV>
</DIV>
<SCRIPT LANGUAGE="JavaScript" SRC="../../../sitebuilder/shared/js/navbar.js"></SCRIPT> 
<SCRIPT LANGUAGE="JavaScript" SRC="../../../sitebuilder/shared/js/navlinks.js"></SCRIPT>


</BODY>
</HTML>