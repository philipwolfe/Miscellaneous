<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD><TITLE>Example 2</TITLE>
<META NAME="ROBOTS" CONTENT="NOINDEX">

</HEAD>
<!--DocHeaderStart-->
<BODY TOPMARGIN=0 LEFTMARGIN=10 BGCOLOR="#FFFFFF" LINK="#000066" VLINK="#666666" TEXT="#000000">
<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->

<FONT FACE="verdana,arial,helvetica" SIZE="2">
<!--DocHeaderEnd-->

<P><b>Example 2</b>
<P>
<PRE><font face="courier" size="2">

&lt;% ' Search Results Section. %&gt;

&lt;% if Request.QueryString &lt;&gt; &quot;&quot; then %&gt; 
&lt;%
' If site visitors use Outlook to view Microsoft Exchange messages,
'  the Exciol control is installed on their computer.
if ExchangeViewer=&quot;both&quot; or ExchangeViewer=&quot;outlook&quot; then %&gt;
&lt;object id=&quot;Exciol&quot; height=0 width=0
 CLASSID=&quot;CLSID:DAFD7A40-73FF-11D1-A811-00AA006EAC9D&quot;
 CODEBASE=&quot;/siteserver/knowledge/search/controls/exciol.ocx#version=5,5,2148,0&quot;
 TYPE=&quot;application/x-oleobject&quot;&gt;
&lt;/object&gt;

&lt;script language=&quot;vbscript&quot;&gt;
  Sub DisplayMsg(EntryID)
    Exciol.DisplayMsg(EntryID)
  End Sub
&lt;/script&gt;
&lt;% end if %&gt;
&lt;% if ExchangeViewer=&quot;both&quot; or ExchangeViewer=&quot;owa&quot; then %&gt;
&lt;% ' When linking to Outlook Web Access, open the link in a new window. %&gt;
&lt;script language=&quot;Javascript&quot;&gt;
function openNewWindow(fileName,theWidth,theHeight) {
  window.open(fileName,&quot;NewWindow&quot;,&quot;toolbar=0,location=0,directories=0,status=1,menubar=1,scrollbars=1,resizable=1,width=&quot;+theWidth+&quot;,height=&quot;+theHeight)
}
&lt;/script&gt;
&lt;% end if %&gt;


   &lt;% ' Set query object properties.
      set Q = Server.CreateObject(&quot;MSSearch.Query&quot;) 
      ' Define all required query properties: the query itself, and all columns
      ' that will be used in the results. 
      Q.SetQueryFromURL(Request.QueryString)
      Q.Catalog = request(&quot;ct&quot;) 
      Q.OptimizeFor=&quot;nohitcount,performance&quot;
      Q.MaxRecords = 10
      Q.Columns = &quot;DocAuthor, DocTitle, DocAddress, Description, Size, FileWrite&quot;
   %&gt;

&lt;% ' The following debug information is useful as you extend this sample page.
   ' Set DEBUGINFO to true to see what is being passed to this page, and the
   ' resulting query property setting.
%&gt;
&lt;% if DEBUGINFO=true or Request(&quot;debug&quot;) &lt;&gt; &quot;&quot; then %&gt;
  &lt;p&gt;
  &lt;table cellpadding=5 border=1 bgcolor=&quot;EEEEEE&quot;&gt;
  &lt;tr&gt;&lt;td&gt;
  &lt;b&gt;Useful Debug Information&lt;/b&gt;&lt;font size=2&gt;
   &lt;p&gt;&lt;b&gt;QueryString passed to this page:&lt;/b&gt;
      &lt;br&gt;&lt;% = Request.QueryString %&gt;
   &lt;p&gt;&lt;b&gt;Query:&lt;/b&gt; &lt;% = Q.Query %&gt;
   &lt;p&gt;&lt;b&gt;Catalogs:&lt;/b&gt; &lt;% = Q.Catalog %&gt;
  &lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;/table&gt;
&lt;% end if %&gt;
&lt;hr&gt;

   &lt;% ' Create the recordset holding the search results.
      on error resume next
      set RS = Q.CreateRecordSet(&quot;sequential&quot;) 
      if err &lt;&gt; 0 then
        createerror = err.description
      end if

   ' Log query for reporting with the Site Server Analysis feature of 
   ' Microsoft Site Server. Only log query for first page of search results.
   '  if Q.StartHit = &quot;&quot; and Session(&quot;q1&quot;) &lt;&gt; &quot;&quot; then 
   '    InfoToLog = &quot;&amp;MSS.request.Search Catalog=&quot; &amp; Q.Catalog &amp;  _
   '      &quot;&amp;MSS.request.Search Start Hit=0&quot; &amp; _
   '      &quot;&amp;MSS.request.Search Query=&quot;&amp; Session(&quot;q1&quot;)
   '    if err or (RS.EOF and RS.BOF) then
   '      InfoToLog = InfoToLog &amp; &quot;&amp;MSS.request.Search Row Count=0&quot;
   '    else
   '      InfoToLog = InfoToLog &amp; &quot;&amp;MSS.request.Search Row Count=0&quot; 
   '    end if
   '    ' Information to be appended cannot contain commas or spaces.
   '    InfoToLog = Replace(InfoToLog, &quot; &quot;, &quot;%20&quot;)
   '    InfoToLog = Replace(InfoToLog,&quot;,&quot;,&quot;+&quot;)
   '    Response.AppendToLog InfoToLog
   '  end if


   ' If the query can't be executed, print out the error description.
     if err then 
       Response.write &quot;&amp;nbsp;&amp;nbsp;&quot; &amp; createerror 

   ' If no matches are found, display a message.
     elseif RS.BOF and RS.EOF then
       Response.write &quot;&lt;p&gt;&quot; 
        if Q.QueryIncomplete=true then
          L_TooComplex_Error = &quot;The query is too complex. 
            Try using a simpler query. For information on search syntax, 
            see &lt;a href=tips.htm&gt;Search Tips&lt;/a&gt;.&quot;
          Response.write L_TooComplex_Error &amp; &quot;&lt;p&gt;&quot;
        else
          L_NoMatch_Error = &quot;No messages matching your query were found. 
            For suggestions on how to broaden your search, see &lt;a href=tips.htm&gt;Search Tips&lt;/a&gt;.&quot;
          Response.write L_NoMatch_Error &amp; &quot;&lt;p&gt;&quot;
     ' Display link for a new search. 
     L_NewSearch_link = &quot;New Search&quot;
     %&gt;
     &amp;nbsp;&amp;nbsp;&lt;a href=&quot;Search.asp&quot;&gt;&lt;% = L_NewSearch_Link %&gt;&lt;/a&gt;
     &lt;%
        end if

     else ' If query could be executed, display results.

</font></PRE>
<P>&nbsp;

</BODY></HTML>

